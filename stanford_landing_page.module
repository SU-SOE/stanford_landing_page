<?php
/**
 * @file
 * Code for the Stanford Landing Page feature.
 */

include_once 'stanford_landing_page.features.inc';


/**
 * Implements hook_preprocess().
 */
function stanford_landing_page_preprocess_node(&$vars) {

  if ($vars["type"] == "stanford_landing_page") {
    // add display mode machine-name
    $vars['classes_array'][] = drupal_clean_css_identifier($vars['field_s_landing_page_layout'][LANGUAGE_NONE][0]['value']);
  }

}

/**
 * Implements hook_entity_info_alter().
 */
function stanford_landing_page_entity_info_alter(&$entity_info) {
  // Override the entity class to allow different view modes per field
  // collection item.
  $entity_info['field_collection_item']['entity class'] = 'FieldCollectionViewMode';
  $entity_info['field_collection_item']['view modes'] += variable_get('field_collection_view_modes', array());
}


/**
 * Entity class for field collection items.
 *
 * If we are a landing page content type parent and on the node_view page
 * we want to tweak the layout to match.
 *
 */
class FieldCollectionViewMode extends FieldCollectionItemEntity {
  public function view($view_mode = 'full', $langcode = NULL, $page = NULL) {

    if($this->field_name == "field_landing_page_item") {
      $arg0 = arg(0);
      $arg1 = arg(1);

      if($arg0 == "node" && is_numeric($arg1)) {
        $node = node_load($arg1);
        $view_mode = $node->field_s_landing_page_layout[LANGUAGE_NONE][0]['value'];
      }
    }

    return parent::view($view_mode, $langcode, $page);
  }
}


